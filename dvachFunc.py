import re
from api2ch import Api2ch


class Dvach_Functions(object):
    
    apilocal = None

    def __init__(self):
        self.apilocal = Api2ch()


    def getBoardTop(self, GOT):
        construtedFromDvach = ""
        resp = self.apilocal.threads(GOT)
        for t in resp.threads[:3]:
            buf = f'–°–∞–±–∂: ‚Äî {t.subject}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤: {t.posts_count} üí¨\n–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {t.views} üëÄ\n–°—Å—ã–ª–∫–∞ –Ω–∞ –û–ü-–ø–æ—Å—Ç: {t.url(GOT)} ‚ö°Ô∏è\n–û–ü-–ø–æ—Å—Ç: {t.body_text[0:2047]}\n[–ö–æ–Ω–µ—Ü –û–ü-–ø–æ—Å—Ç–∞]'
            construtedFromDvach += (buf + '\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n')
        toRet = f'–¢–û–ü –ü–û–°–¢–û–í –° –î–û–°–ö–ò /{GOT.upper()}\n\n' + construtedFromDvach
        if len(toRet) > 4000:
            toRet = toRet[0:3980] + '\n[–õ–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è]'
        print(toRet)
        return toRet


    def getBoardWithTags(self, board, GOT):
        toRet = ""
        allThreads = ""
        toRet += "–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ —Ç–≤–æ–∏–º –º–µ—Ç–∫–∞–º: "
        for j in range (0, len(GOT)):
            toRet += (GOT[j] + ", ")
        toRet = toRet.rstrip(', ')
        toRet += f'\n–î–æ—Å–∫–∞ /{board}'
        toRet += "\n\n"
        resp = self.apilocal.threads(board)
        for t in resp.threads[:len(resp.threads)]:
            for i in range(0, len(GOT)):
                if re.search(GOT[i].lower(), t.body.lower()):
                    allThreads += f'–°–∞–±–∂: ‚Äî {t.subject}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤: {t.posts_count} üí¨\n–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {t.views} üëÄ\n–°—Å—ã–ª–∫–∞ –Ω–∞ –û–ü-–ø–æ—Å—Ç: {t.url(board)} ‚ö°Ô∏è\n–û–ü-–ø–æ—Å—Ç: {t.body_text[0:2047]}\n[–ö–æ–Ω–µ—Ü –û–ü-–ø–æ—Å—Ç–∞]'
                    allThreads += '\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n'
        if len(allThreads) == 0:
            toRet += f'–ù–∞ –±–æ—Ä–¥–µ /{board} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Ç—Ä–µ–¥–æ–≤ –ø–æ —Ç–≤–æ–∏–º —Ç–µ–≥–∞–º'
            return toRet
        toRet += allThreads
        if len(toRet) > 4000:
            toRet = toRet[0:3980] + '\n[–õ–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è]'
        print(toRet)
        return toRet
